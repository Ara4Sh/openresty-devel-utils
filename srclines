#!/usr/bin/env perl

use strict;
use warnings;

for my $file (@ARGV) {
    my ($ext) = ($file =~ /\.(\w+)$/);
    if ($ext) {
        $ext = lc($ext);
    }

    open my $in, $file or
        die "Cannot open $file for reading: $!\n";

    my $src = do { local $/; <$in> };

    if (!$ext) {
        if ($src =~ /\A\#!(.*)/) {
            my $shebang = $1;
            if ($shebang =~ /\b(?:sh|bash)\b/) {
                $ext = 'sh';
            } elsif ($shebang =~ /\b(?:perl)\b/) {
                $ext = 'pl';
            }

        } else {
            die "no file extension nor shebang line found in file $file\n";
        }
    }

    close $in;

    if ($ext eq 'lua') {
        $src =~ s/^\s*--.*//gm;
        $src =~ s/^\s*\n//gm;

    } elsif ($ext eq 'pl' || $ext eq 'pm' || $ext eq 'edge' || $ext eq 'sh' || $ext eq 'pgx') {
        $src =~ s/^\s*\#.*//gm;
        $src =~ s/^\s*\n//gm;
        $src =~ s/^=\w+.*?^=cut\s*$//gms;
        $src =~ s/^__(?:DATA|END)__\n.*//gms;

    } elsif ($ext =~ /^(?:[ch]|cc|cpp|y|dasc)$/) {
        $src =~ s{^\#[ \t]*if[ \t]+(?:0|\(?(?:DDEBUG|NGX_DEBUG)\)?)[ \t]*\n.*?\n\#endif\b.*?\n}{}gms;
        $src =~ s{/\*.*?\*/}{}gs;
        $src =~ s{//[^\n]*}{}gs;
        $src =~ s{^\s*dd\(".*\n}{}gm;

        if ($ext eq 'dasc') {
            $src =~ s/^[ \t]*\|[ \t]*$//mgs;
        }

        $src =~ s/^\s*\n//gm;

    } else {
        $src =~ s/^\s*\#\s.*//gm;
        $src =~ s/^\s*\n//gm;
        warn "WARNING: unknown recognized extension: $ext\n";
    }

    print $src;
}
