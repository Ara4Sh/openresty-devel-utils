#!/usr/bin/env perl

use strict;
use warnings;

package Openresty::Devel::Build;

use Cwd ();
use File::Spec ();
use Getopt::Long qw(GetOptionsFromArray);
use Data::Dumper;
use Pod::Usage;

require Exporter;

our @ISA = qw(Exporter);
our @EXPORT = qw( main );
our $VERSION = 1.00;

our $opts = {
  force => '',
  build_opts => {
    cc                => '',
    optimize          => '',
    jobs              => '',
    disable_no_pool   => 0,
    no_debug          => '',
    dtrace            => '',
    cc_opts           => '',
    ld_opts           => '',
    extra_config_opts => ''
  },
  unknown => []
};

my $cc = $ENV{NGX_BUILD_CC};
my $optimize = $ENV{NGX_BUILD_OPT};
my $jobs = $ENV{NGX_BUILD_JOBS} || 1;
my $disable_no_pool = $ENV{NGX_BUILD_DISABLE_NO_POOL};
my $no_debug = $ENV{NGX_BUILD_NO_DEBUG};
my $dtrace = $ENV{NGX_BUILD_DTRACE};
my $cc_opts = $ENV{NGX_BUILD_CC_OPTS};
my $ld_opts = $ENV{NGX_BUILD_LD_OPTS};
my $extra_config_opts = $ENV{NGX_BUILD_EXTRA_CONFIG_OPTS};

sub main {
  my $cls = shift;
  my $ARGS = defined $_[0] ? $_[0] : [];

  $cls->parse_options($ARGS);
  print Dumper \$opts;
}

sub parse_options {
  my ($cls, $ARGS) = @_;

  Getopt::Long::Configure( 'pass_through', 'no_autoabbrev');
  my $ret = Getopt::Long::GetOptionsFromArray($ARGS,
    'f|force=s' => \$opts->{force},
    'cc=s'      => \$opts->{build_opts}{cc},
    'o|optimize=i' => \$opts->{build_opts}{optimize},
    'disable-no-pool' => \$opts->{build_opts}{disable_no_pool},
    'h|help'    => sub { $cls->usage(1)               },
    '<>'        => sub { push($opts->{unknown}, $_[0]); }
  );
}

sub usage {
  my $cls = shift;
  my $ret = defined $_[0] ? $_[0] : 2;

  pod2usage({
    -exitval => $ret
  });
}

1;

__PACKAGE__->main(\@ARGV) unless caller();

__END__

=head1 NAME

resty-build - build a custom nginx

=head1 SYNOPSIS

./resty-build [OPTS]

=head1 OPTIONS

=over 4

=item --version

Print the version information

=item --usage

Print the usage line of this summary

=item --help

Print this summary

=item --add-module

Add a module

=item --debug

Enable the NGINX debug flag

=back

=head1 DESCRIPTION

A utility for creating custom nginx builds.

=head1 AUTHOR

Brandon Beveridge
